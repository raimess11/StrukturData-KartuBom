Requirement Game Kartu Bom
Catatan : Stack & Queue

Deskripsi:
Permainan kartu bom adalah permainan kartu yang dimainkan oleh beberapa pemain, dimana setiap giliran pemain harus mengambil satu kartu pemain berikutnya dan membuang satu kartu miliknya kecuali kartu bom. Permainan berakhir ketika semua pemain tersisa satu kartu, dan pemain yang memiliki kartu bom (joker) dianggap kalah.

Cara bermain
1. Terdapat tumpukan kartu yang akan dibagikan kepada para pemain, dan didalamnya terdapat 1 kartu bom. 
2. Setiap pemain mendapatkan 5 kartu. Dengan pembagian tadi, maka pasti terdapat pemain yang memiliki kartu bom.
3. Ketika memasuki gilirannya, pemain mengambil satu kartu pemain berikutnya. Pemain tidak dapat melihat kartu pemain lain.
4. Setelah mengambil kartu, pemain membuang satu kartu yang ia miliki. Kartu yang dibuang tidak boleh kartu yang baru saja diambil atau kartu bom.
5. Lanjut ke giliran pemain lain.
6. Ketika semua pemain telah tersisa 1 kartu, maka setiap pemain menunjukkan kartu tersebut. Pemain yang memiliki kartu bom dianggap kalah.

Requirement:
1. Tumpukan kartu harus memuat 1 kartu bom.
2. Pemain harus mendapatkan 5 kartu pada awal permainan
3. Ketika mendapatkan giliran, pemain harus memilih 1 kartu milik pemain berikutnya.
4. Kartu yang dipilih pemain dikeluarkan dari kumpulan kartu milik pemain berikutnya.
5. Kartu yang dipilih ditambahkan menjadi kartu milik pemain.
6. Pemain harus membuang 1 kartu yang dimilikinya kecuali kartu yang baru diambil atau kartu bom.
7. Pemain harus berhenti bermain ketika kartu dirinya sendiri dan pemain selanjutnya tersisa 1.
8. Ketika semua kartu pemain tersisa 1, maka permainan berakhir.
9. Ketika permainan berakhir, program harus menemukan pemain yang memiliki kartu bom.
10. Pemain yang memiliki kartu bom dinyatakan kalah.

Program:
Set kartu menggunakan metode stack
Deck menggunakan metode queue
primitif converstioninfixtoprefix

Objek:

Player
================================
struct pemain : <
	kumpulanKartu : kartuPegangan,
	jumlahKartu : integer >
================================
procedure addCard(in x : address, in/out playerX : pemain)
{I.S. terdapat kartu yang telah diambil dari pemain selanjutnya
F.S. kartu yang telah diambil dimasukkan ke kumpulan kartu pemain}
logika
	{masukkan kartu ke dalam kumpulan kartu playerX}

procedure removeCard(out x : address, in/out playerX : pemain)
{I.S. jumlah kartu pemain lebih dari 1
F.S. kartu pilihan pemain dihapus dari kumpulanKartu}
logika
	{pengecekan kartu pemain masih lebih dari 1}
	{pemilih kartu pada kumpulan kartu pemain, jika punya kartu bom maka tidak boleh dipilih}

procedure takeCard(out x : address, in/out nextPlayerX : pemain)
{I.S. kartu pemain selanjutnya lebih dari 1
F.S. kartu pemain selanjutnya diambil dan ditampung dalam variabel, jumlahKartu pemain selanjutnya berkurang 1}
logika
	{pengecekan kartu pemain selanjutnya lebih dari 1}
	{memilih kartu yang akan diambil dari pemain selanjutnya}
	{mengambil kartu yang dipilih dari pemain selanjutnya dan ditampung dalam x}

Set
================================
constant N : integer = 20
kartu : string
infotype : kartu
address : infotype
struct tumpukanKartu : <
	top : addressSet >
================================
giveCard()
{I.S. terdapat stack kartu yang akan dibagikan kepada pemain
F.S. kartu-kartu dibagikan secara merata kepada pemain}
logika
	{loop pembagian kartu hingga set kartu habis/kosong}
		{kartu dibagikan kepada tiap pemain secara merata}


Hand
================================
kartu : string
struct elemen : <
	info : infotype,
	next : address >
address : pointer to elemen
struct kartuPegangan : <
	head : addressHand >
================================


Game
================================
turn : pemain
lose : pemain
================================
startGame()
{I.S. setiap pemain telah mendapatkan kartu dan belum ditentukan pemain untuk turn
F.S. turn/giliran diberikan kepada pemain pertama dalam antrian}
logika


finishGame()
{I.S. setiap pemain tersisa 1 kartu
F.S. turn dikosongkan}
logika
	{pengecekan jumlah kartu tiap pemain}
		{jika semua pemain tersisa 1 kartu, maka permainan diberhentikan}

checkLose(pemain)
{I.S. permainan telah berakhir/finish
F.S. pemain yang memiliki kartu bom (Joker) dinyatakan kalah}
logika
	{pengecekan 1 kartu terakhir yang dimiliki oleh tiap pemain}
	{jika pemain yang ditemukan memiliki joker maka dianggap kalah}




